generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Lesson {
  id       String       @id @default(uuid())
  name     String
  link     String?
  times    LessonTime[]
  homework Homework[]
  notes    String?
  user     User         @relation(fields: [userId], references: [id])
  userId   String
}

model LessonTime {
  id       String @id @default(uuid())
  time     String //Mon 16:10
  lessonId String
  lesson   Lesson @relation(fields: [lessonId], references: [id])
}

model User {
  id                   String                 @id @default(uuid())
  email                String                 @unique
  password             String
  name                 String
  lessons              Lesson[]
  homework             Homework[]
  role                 Role                   @default(STUDENT)
  LessonCompleteStatus LessonCompleteStatus[]
  Token                Token[]
}

model Homework {
  id                   String                 @id @default(uuid())
  task                 String
  lesson               Lesson                 @relation(fields: [lessonId], references: [id])
  lessonId             String
  givenTo              User[]
  deadline             String
  LessonCompleteStatus LessonCompleteStatus[]
}

model LessonCompleteStatus {
  id         String   @id @default(uuid())
  completed  Boolean  @default(false)
  user       User     @relation(fields: [userId], references: [id])
  userId     String
  homework   Homework @relation(fields: [homeworkId], references: [id])
  homeworkId String
}

model Token {
  id           String @id @default(uuid())
  refreshToken String
  user         User   @relation(fields: [userId], references: [id])
  userId       String
}

enum Role {
  STUDENT
  ADMIN
}

// model Day {
//   id                String @id @default(uuid())
//   day               String @unique
//   lessons_time      String
//   lessons           Lesson[]
// }
